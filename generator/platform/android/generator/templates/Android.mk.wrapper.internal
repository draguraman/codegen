# Workaround for http://gcc.gnu.org/bugzilla/show_bug.cgi?id=42748
TARGET_CFLAGS += -Wno-psabi
TARGET_CFLAGS += -Wno-multichar

LOCAL_PATH := \$(call my-dir)

find_src_files = \$(addprefix \$(1)/,\$(notdir \$(wildcard \$(LOCAL_PATH)/\$(1)/*.cpp)))

CXX_SRC_FILES := \$(call find_src_files,../../../../wrapper-src/cxx/${package_name}) \$(call find_src_files,../../../../src/cxx/${package_name})

CXX_INCLUDES := \$(LOCAL_PATH)/../../../../wrapper-includes \$(LOCAL_PATH)/../../../../includes 

include \$(CLEAR_VARS)
LOCAL_MODULE := ${package_name}_static
LOCAL_SRC_FILES := \$(CXX_SRC_FILES)
LOCAL_LDLIBS := -llog
LOCAL_C_INCLUDES := \$(CXX_INCLUDES)
LOCAL_EXPORT_C_INCLUDES :=\$(CXX_INCLUDES)
LOCAL_CFLAGS    := -DANDROID_PLATFORM
LOCAL_EXPORT_LDLIBS := -llog
#if $include_default_runtime
LOCAL_WHOLE_STATIC_LIBRARIES += ZyngaCXX_static
#end if
#for $include_wrapper_package in $include_wrapper_packages
LOCAL_WHOLE_STATIC_LIBRARIES += ${include_wrapper_package}_static
#end for
include \$(BUILD_STATIC_LIBRARY)

include \$(CLEAR_VARS)
LOCAL_MODULE := ${package_name}_shared
LOCAL_SRC_FILES := \$(CXX_SRC_FILES)
LOCAL_LDLIBS := -llog
LOCAL_C_INCLUDES := \$(CXX_INCLUDES)
LOCAL_EXPORT_C_INCLUDES := \$(CXX_INCLUDES)
LOCAL_CFLAGS    := -DANDROID_PLATFORM
LOCAL_EXPORT_LDLIBS := -llog
#if $include_default_runtime
LOCAL_WHOLE_STATIC_LIBRARIES += ZyngaCXX_static
#end if
#for $include_wrapper_package in $include_wrapper_packages
LOCAL_WHOLE_STATIC_LIBRARIES += ${include_wrapper_package}
#end for
include \$(BUILD_SHARED_LIBRARY)

\$(call import-module, project/exported/${package_name})

\$(call import-module, runtime/ZyngaCXX/jni)

#for $include_wrapper_package_rel_path in $include_wrapper_package_rel_paths
\$(call import-module, $include_wrapper_package_rel_path)
#end for